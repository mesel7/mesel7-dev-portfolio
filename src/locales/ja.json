{
  "home": {
    "page": {
      "title": "WEB DEVELOPER",
      "greeting": "こんにちは :)",
      "description": "私は、視覚的な美しさはもちろん、使いやすさにも気を配ったUI/UXを目指して開発に取り組んでおります。特にフロントエンドは、ユーザーとの接点に最も近い部分であり、単なる画面実装にとどまらず、サービスがユーザーにどう認識され、どのように体験されるかを設計する仕事だと考えます。日本は、多彩な分野で質の高いコンテンツを生み出し、また、細部までユーザーに配慮した、洗練されたサービスが数多く存在しています。そのような点が、私の開発姿勢とも通じる部分が多いと感じました。この環境でしか得られない経験を通じ、技術力はもちろん、サービスの本質をユーザーエクスペリエンスとして形にしていく力を高めたいと思っております。",
      "cta": {
        "moreAboutMe": "MORE ABOUT ME"
      },
      "sections": {
        "profile": {
          "heading": "PROFILE",
          "caption": "プロフィール",
          "items": {
            "name": { "label": "NAME", "value": "KIM DONGHYEON" },
            "birthdate": { "label": "BIRTHDATE", "value": "1999.04.28" },
            "phone": { "label": "PHONE", "value": "010-5954-2166" },
            "email": { "label": "EMAIL", "value": "cejhans1520@gmail.com" },
            "address": { "label": "ADDRESS", "value": "Seoul, Korea" },
            "language": { "label": "LANGUAGE", "value": "Korean / Japanese" }
          }
        }
      }
    }
  },

  "about": {
    "page": {
      "title": "ABOUT",
      "lead": "私が主に使用している技術スタックと開発経験をご紹介いたします。",
      "sections": {
        "tech": {
          "heading": "TECH STACK",
          "caption": "技術スタック"
        },
        "experience": {
          "heading": "EXPERIENCE",
          "caption": "開発経験"
        }
      }
    },
    "skills": {
      "html": {
        "title": "HTML5",
        "description": "セマンティックタグを活用した構造的なマークアップが可能です。\nWeb標準やアクセシビリティを考慮したレイアウト設計に対応できます。\n簡潔で保守性の高いHTMLを書くことを得意としています。"
      },
      "css": {
        "title": "CSS3",
        "description": "Flexboxとメディアクエリを組み合わせたレスポンシブレイアウトの実装が可能です。\nBEM方法論とブラウザ開発者ツールを活用し、構造的なクラス設計や細部のスタイルデバッグに対応できます。\nコンポーネント単位でのカスタムスタイル設計にも慣れています。"
      },
      "js": {
        "title": "JavaScript",
        "description": "Vanilla JavaScriptでDOM操作やイベント処理を実装できます。\nES6構文（アロー関数、分割代入、テンプレートリテラルなど）を活用可能です。\naxiosを用いたバックエンド（Spring Boot）との非同期通信実装経験があります。"
      },
      "react": {
        "title": "React",
        "description": "コンポーネントベースのUI開発、React Routerによるルーティング、条件付きレンダリングなどの基本構造を理解しています。\nuseStateでのローカル状態管理、Contextによるグローバル状態の設計・管理が可能です。\nuseCallbackやReact.memoを活用し、パフォーマンス最適化を意識した開発を行っています。"
      },
      "node": {
        "title": "Node.js",
        "description": "Node.jsの実行構造やランタイム環境を理解しています。\nnpmでプロジェクト依存関係を管理できます。\nローカルサーバー構築やバックエンド連携にNode.jsを使用した経験があります。"
      },
      "git": {
        "title": "Git / GitHub",
        "description": "Gitを使用してプロジェクトのバージョン管理やチームでの協働経験があります。\nPull Request、Merge、Rebaseなどの基本的なブランチ戦略を理解しています。\nGitHubを通じたコードレビューやIssue管理の経験があります。"
      }
    },
    "experience": {
      "capstone": {
        "period": "2025.03 ~ 2025.06",
        "title": "Capstone Design Project",
        "role": "Team Leader / Frontend Developer",
        "description": "キャップストーンプロジェクトにて5人チームのリーダーを務め、Webフロントエンドの開発を担当いたしました。モバイルとWebの双方に対応するクロスプラットフォーム構成のサービスを実装し、OpenAI APIとSpring Bootを用いたバックエンドとの連携設計、ユーザー導線を意識したUI/UXの構築を通じて、ソフトウェア開発全体の流れを理解し、チーム開発のマネジメント経験を積むことができました。"
      },
      "preCapstone": {
        "period": "2024.09 ~ 2024.12",
        "title": "Pre-Capstone: Industry Collaboration Project",
        "role": "Frontend Developer",
        "description": "Reactのスキルを実践的なチーム開発に初めて応用したプロジェクトです。企業連携型の学内プロジェクトにて、4人チームの一員としてフロントエンド開発を担当いたしました。RESTful APIとの連携、Context APIによる状態管理、レスポンシブデザインの最適化など、幅広い実装を行いました。完成度の高さが評価され、学内にて優秀賞を受賞いたしました。"
      },
      "reactPractice": {
        "period": "2024.07 ~ 2024.08",
        "title": "React Practice Projects",
        "role": "Personal Project",
        "description": "初期のプロジェクトを通じて、Vanilla JSのデバッグのしやすさは理解した一方で、生産性や保守性の限界も感じ、Reactを独学いたしました。その後、新たにマッチングWebアプリをReactで企画・開発し、併せてポートフォリオサイトも制作する中で、状態管理、ルーティング、Context設計、パフォーマンス最適化などの技術理解を体系的に深めることができました。"
      },
      "playin": {
        "period": "2024.01 ~ 2024.06",
        "title": "PLAY-IN (Startup Collaboration)",
        "role": "Frontend Developer",
        "description": "スタートアップとの連携による初めての実務的プロジェクトであり、企画チームと協力して大学生向けマッチングWebアプリの開発と運用を行いました。HTML・CSS・Vanilla JS・Firebaseを用いてフロントエンド全体の実装および本番環境へのデプロイを担当し、ユーザーフィードバックに基づき、画像の最適化や読み込み速度の改善など、実運用上の課題に積極的に対応いたしました。"
      }
    }
  },

  "projects": {
    "page": {
      "title": "PROJECTS",
      "lead": "私がこれまでに取り組んだプロジェクトの中から、代表的なものをご紹介いたします。",
      "sections": {
        "mainProjects": {
          "heading": "MAIN PROJECTS",
          "caption": "主なプロジェクト"
        }
      }
    },
    "portfolio": {
      "name": "portfolio",
      "title": "mesel7 Dev Portfolio",
      "period": "2024.07 ~ 2025.08",
      "type": "Personal Project / Fullstack",
      "description": "ReactとFirebaseを基盤に制作した個人ポートフォリオサイトです。\n爽やかな夏の空から着想を得たイメージのカラーパレットを採用し、プロジェクト・経験・技術スタックを体系的に整理して、就職活動や自己PRに活用できるよう構成しました。",
      "tech": ["HTML5", "CSS3", "JavaScript", "React", "Firebase"],
      "links": {
        "project": "https://mesel7.dev/",
        "github": "https://github.com/mesel7/portfolio"
      },
      "note": "本プロジェクトの主要機能・構造・スクリーンショット等はGitHubにてご確認いただけます。また、プロジェクトリンクから実際のサービスを体験することも可能です。\n本ページでは、開発の背景、課題解決の過程、学んだ点を中心にまとめています。",
      "insight": {
        "motive": "React学習の後、今後進めるプロジェクト・経験・技術スタックを体系的に整理し、効果的に伝えるために個人ポートフォリオサイトを企画しました。商用テンプレートに依存せず、デザイン企画から実装まで全工程を自ら行い、自身の能力と個性を最もよく表現できるオーダーメイドのポートフォリオを完成させました。",
        "problemSolving": "本ポートフォリオサイトでは、プロジェクト・経験・技術スタックなどCRUDが不要な静的データをJSONファイルで管理し、バックエンド呼び出しなしで高速な読み込みと軽量なユーザー体験を実現しました。多言語対応のため、i18nライブラリを用いて国際化（i18n）構造を設計し、locales/ko.jsonおよびlocales/ja.jsonに言語別データを分離保存するローカライズ（l10n）作業を行いました。これにより、保守性と拡張性を確保し、共通レイアウトコンポーネントでレンダリング効率を高めました。また、768px以下のモバイル端末でもスムーズに表示できるよう、CSSメディアクエリとreact-responsiveのuseMediaQueryフックを活用してレスポンシブWebを実装しました。スタイルやサイズの調整はメディアクエリで行い、レイアウトが完全に異なる場合はモバイル専用・PC専用コンポーネントを使用しました。デザイン面では、過剰なエフェクトよりもシンプルで洗練されたUIと高い可読性を重視しました。さらに、夏の蒼天から着想を得たカラーパレットとlinear-gradientを適用し、情報性とブランド感性の両立を図りました。",
        "learned": "本プロジェクトを通じて、Webサイトの目的や要件に合った技術を選定・適用する能力の重要性を実感しました。特にi18nライブラリを活用してユーザー体験を向上させる多言語対応機能を実装する中で、国際化（i18n）とローカライズ（l10n）の実践的な適用方法を習得しました。また、個人プロジェクトであっても技術実装に留まらず、デザインやUI/UXの完成度を高めることがプロジェクトの価値を大きく向上させることを確認しました。これにより、単なる機能開発を超えて、自分を効果的に表現しブランドアイデンティティを反映させる経験を積むことができました。"
      }
    },
    "foodRunner": {
      "name": "food-runner",
      "title": "Food Runner",
      "period": "2025.03 ~ 2025.06",
      "type": "Team Project (5 members) / Team Leader • Web Frontend",
      "description": "Food Runnerは、AI機能を活用して食事と運動を手軽に管理できるよう支援するヘルスケアプラットフォームです。\nAIが料理の写真を分析して自動的に栄養情報を記録し、音声認識を通じて簡単に運動データを入力できます。\nユーザーの好みや体調に合わせた食事や運動動画を提案し、体系的な健康管理をサポートいたします。\nWebとモバイル（Android/iOS）の両方に対応したクロスプラットフォームで開発されており、優れたアクセス性とユーザー体験を提供いたします。",
      "tech": ["React", "Spring Boot", "OpenAI API", "Google Cloud Vision API", "MySQL"],
      "links": {
        "project": "",
        "github": "https://github.com/25-capstone-team-breakthrough/food-runner-web-fe",
        "demo": "https://www.youtube.com/watch?v=mg_RT6aKlig"
      },
      "note": "本プロジェクトは現在、デプロイ環境が終了しておりサービスはご利用いただけませんが、主要機能・構造・スクリーンショット等はGitHubにてご確認いただけます。\n本ページでは、開発の背景、課題解決の過程、学んだ点を中心にまとめています。",
      "insight": {
        "motive": "健康的なライフスタイルへの関心が高まる中、食事や運動を体系的に管理したいというニーズも増加しています。しかし、従来の健康管理アプリはユーザーが自ら栄養素やカロリーを入力する必要があったり、単なる記録にとどまるものが多く、不便さがありました。\nそこで、AIを活用してユーザーの入力負担を軽減し、持続可能な健康管理体験を提供することを目指しました。食事写真や運動記録のみで栄養情報を分析しカロリーを算出し、パーソナライズされたフィードバックと目標達成を支援するシステムを構築したことが、このプロジェクトの出発点です。",
        "problemSolving": "運動のアクティブな印象と、食事・栄養の調和の取れたイメージを同時に伝えるデザイン構成に課題がありました。\nチームメンバーとの定期的なミーティングでアイデアを共有し、複数のデザイン案を比較検討した上で、最も効果的なビジュアル方向性を決定し実装しました。\n運動および食事データの種類が多かったため、機能ごとに3つのContextに分割し、それぞれをStateContextとDispatchContextに分けて、ユーザーの操作フローに沿って適切にデータを供給できるよう構成しました。\nまた、AIのレスポンス遅延によるユーザー体験の低下を防ぐため、API呼び出し回数を最小化し、ローディングコンポーネントを導入して明確なフィードバックを提供しました。\n大量の食事データを一度にレンダリングすることで発生するパフォーマンス低下については、無限スクロールによる部分レンダリング手法やReactの最適化手法を適用し、不要な再レンダリングを削減することで解決しました。",
        "learned": "デザインを含む重要な意思決定プロセスにおいて、チームメンバーと密接に協力しながら進める中で、コミュニケーションの重要性を強く実感しました。\n特に、Webとモバイルサービスが同一のバックエンドを共有する構成であったため、機能の一貫性とユーザーフローを維持するために、週1回以上の対面ミーティングを実施し、意見の調整と方向性の統一を行いました。\nまた、Webフロントエンドを担当しながらも、Spring BootベースのバックエンドやOpenAI APIとの連携を含むシステム全体の構造を理解し、設計フローを把握する経験を積みました。\nバックエンド担当メンバーとの協働を通じて、データ構造設計からフロントエンドのContextやコンポーネント構造に至るまで、一貫性と効率性を意識した統合的な設計手法を学ぶことができました。"
      }
    },
    "weatherDiary": {
      "name": "weather-diary",
      "title": "心の天気 - 感情記録プラットフォーム",
      "period": "2024.09 ~ 2024.12",
      "type": "Team Project (4 members) / Web Frontend",
      "description": "心の天気は、LLMベースの感情分析および心理相談機能を導入した日記型Webアプリケーションです。\nユーザーが日々の感情を記録し、心理的なサポートを得られるよう支援するものであり、カレンダー・ハッシュタグ・日記検索機能を通じて、記録した日記を便利に管理することができます。\nAIによって分析された感情とハッシュタグをもとに、ユーザーは自身の感情状態をより深く認識し、適切に表現できるようになります。",
      "tech": ["React", "Node.js", "Firebase Auth", "OpenAI API", "OpenWeather API", "MySQL"],
      "links": {
        "project": "",
        "github": "https://github.com/24-precapstone-team3/weather-diary-fe"
      },
      "note": "本プロジェクトは現在、デプロイ環境が終了しておりサービスはご利用いただけませんが、主要機能・構造・スクリーンショット等はGitHubにてご確認いただけます。\n本ページでは、開発の背景、課題解決の過程、学んだ点を中心にまとめています。",
      "insight": {
        "motive": "忙しい現代社会において、メンタルヘルスの維持が難しくなっており、感情を表現し振り返る日記の重要性が一層高まっています。しかし、既存の日記アプリには感情状態の認識を支援したりフィードバックを提供する機能が不足しており、ユーザー自身が感情を整理・理解するには限界がありました。\nこの課題を解決するため、感情分析と心理カウンセリングのフィードバックを提供するスマート日記プラットフォームを企画しました。\nLLMを基盤に感情キーワードやパターンを分析し、感情をより深く理解し管理できる構造として設計したことが、本プロジェクトの出発点です。",
        "problemSolving": "1か月前に学習したReactを初めて実戦のチーム開発プロジェクトに適用し、RESTful API連携やバックエンドのデータ処理に多くの課題がありました。\nNode.jsベースのバックエンドに対してGET・POST方式に応じたリクエストを構成し、取得したレスポンスデータを適切に加工してレンダリングするプロセスを繰り返す中で、実践的な感覚を身につけました。\n開発初期にはCORSエラーや404エラーなど様々な問題に直面しましたが、チームメンバーと協力して原因を分析し解決する過程で、バックエンド連携の経験を積むことができました。\nまた、Seremeetyプロジェクトで使用したFirebase Phone Authを再利用して認証を実装し、Firebase UIDをユーザーテーブルのPrimary Keyとして活用する形でバックエンド構造を設計しました。\nPropsのみで渡していた日記データやハッシュタグ情報の管理においてProps Drillingによる複雑性が増したため、改善策としてDiaryContextとTagContextをそれぞれ設計しました。両ContextともuseReducerをベースに構成し、日記およびタグデータをグローバルに効率的に管理できるようにしました。これによりコンポーネント間の状態共有が簡潔になり、ユーザー体験の一貫性と保守性も向上しました。",
        "learned": "以前のSeremeetyプロジェクトではReactとFirebaseを用いたWebアプリを完成させた経験がありましたが、本プロジェクトを通じてRESTful API連携を中心とした、より構造的なWeb開発手法を習得することができました。RESTful構造はバックエンドとの明確な役割分担や効率的なデータフロー管理に有利であることを実感しました。\nOpenAI APIおよびOpenWeather APIの連携を通じて、外部API呼び出し時に発生しうるレスポンス遅延、エラー処理、結果のレンダリングなどに対するフロントエンド側の対応方法を実戦で学びました。\nさらに、GitHubを活用して機能単位でBranchを作成し、Pull RequestやMergeを経てコンフリクト解消、Git Flow戦略などを適用する実務的な協働プロセスを経験しました。\n単なる技術実装にとどまらず、チームメンバーとのコミュニケーションを通じて問題を迅速に解決し、役割を理解しながら共に完成へと導く協働能力も向上させることができました。"
      }
    },
    "seremeety": {
      "name": "seremeety",
      "title": "Seremeety - 出会いのセレナーデ",
      "period": "2024.07 ~ 2024.08",
      "type": "Personal Project / Fullstack",
      "description": "Seremeetyは、自然な出会いが難しい大学生のための、信頼性のある情報に基づいた健全なマッチングプラットフォームです。\n「セレナーデ（Serenade）」と「ミーティング（Meeting）」を組み合わせたネーミングの通り、感性的な雰囲気の中で、ナチュラルかつ健全な出会いを提供することを目指しています。\n色彩テーマには、ロマンチックな印象を与えるセレニティブルーのパステルカラーを採用し、恋愛の感情をビジュアル面でも表現しました。\n本サービスは、PCやスマートフォンなど、ブラウザさえあればどのデバイスからでも利用できるWebアプリとして構築されています。\nネイティブアプリに近い直感的でスムーズなユーザー体験（UX）を実現するため、インタラクションと画面遷移に工夫を凝らしました。",
      "tech": ["HTML5", "CSS3", "JavaScript", "React", "Firebase"],
      "links": {
        "project": "https://seremeety-kr.web.app/",
        "github": "https://github.com/mesel7/seremeety-web"
      },
      "note": "本プロジェクトの主要機能・構造・スクリーンショット等はGitHubにてご確認いただけます。また、プロジェクトリンクから実際のサービスを体験することも可能です。\n本ページでは、開発の背景、課題解決の過程、学んだ点を中心にまとめています。",
      "insight": {
        "motive": "前回のプロジェクトではVanilla JSを用いてマッチングWebアプリを開発しましたが、UI・UXの面で限界があり、より高いレベルのユーザー体験を提供する必要性を感じました。\nそこで、新たに学習したReactを適用し、より直感的で反応性の高いインターフェースを実現することを目標に本プロジェクトを企画しました。\nまた、Reactを用いることでVanilla JSよりもWebアプリをネイティブアプリに近い形で実装できるかという技術的挑戦も並行して行いました。",
        "problemSolving": "モバイル環境を優先的に考慮し、様々なデバイス幅を分析した上で、最大幅を480pxに設定し、全体にメディアクエリを適用しました。さらに、rem単位を活用して画面サイズに応じた柔軟な対応を可能にしました。\n標準のHTMLフォーム要素（select、input、radio、textareaなど）はブラウザやOSによってスタイルが異なるため、プロジェクトテーマに合わせたカスタムスタイルを適用し、再利用可能なコンポーネントとして作成しました。\nチャット機能では、Firebaseのリアルタイム購読を利用してメッセージの変化を即時反映させつつ、ChatProviderに購読解除ロジックを組み込み、ページ遷移時の重複購読を防止しました。チャットルームでは初期表示を20件のメッセージに制限し、スクロール時に20件ずつ追加読み込みすることでパフォーマンス負荷を軽減しました。また、react-intersection-observerライブラリを活用してスクロール最上部の検知を行い、自然な無限スクロールを実装しました。さらに、メッセージ追加時にはrequestAnimationFrameを用いて、モバイル環境でもスムーズにスクロール位置を維持できるよう最適化しました。\nApp.jsxでは、Firebase AuthとFirestoreの新規ユーザーデータ登録状況を同期するロジックを実装しました。ログイン時にonAuthStateChangedで認証状態を確認し、Firestoreに該当UIDのデータが存在しない場合は即座に新規ユーザーデータを生成します。これにより、認証のみが完了しDBに情報が存在しない状態を防ぎ、安定した初期アクセス体験を提供しました。",
        "learned": "Reactでの実装により、画面遷移速度とUIの反応性が大幅に向上し、コンポーネント再利用によって開発効率も高まりました。これにより、モバイル中心のWebアプリにおいてネイティブアプリに近いユーザー体験を実現するという当初の目標を達成し、一般的なWebサービス開発においてもReactの効率性と一貫したユーザー体験提供能力を実感しました。\nまた、Firebaseの非同期データ処理を扱う中で、データ準備状態に応じたレンダリング制御、ローディングコンポーネントの適用、エラー防止処理などの技術を習得しました。さらに、データロジックをContextとuseReducerベースで管理し、StateとDispatchを分離して供給する構造を採用しました。これにより、機能ごとに4つのContextを細分化し、必要なページにのみ効率的に状態を提供できるようになりました。\n2025年7月から8月にかけてコード構造の改善とデザインリニューアルを実施し、初期開発後の保守やリファクタリングの重要性を改めて認識しました。その結果、コードの可読性、パフォーマンス、UIの一貫性を向上させることができました。"
      }
    },
    "sweetii": {
      "name": "sweetii",
      "title": "Sweetii - 甘い出会い",
      "period": "2024.01 ~ 2024.06",
      "type": "Team Project (3 members) / Web Frontend",
      "description": "Sweetiiは、大学認証システムと詳細なプロフィールを通じて、信頼性の高いマッチング環境を提供する出会い系プラットフォームです。\n企画チームと連携してマッチングロジック、収益モデル、デザインを設計し、それに基づいたUI/UXを実装することで、実際のユーザー体験の向上に努めました。\n本サービスはVanilla JSで構築されたWebアプリであり、Firebaseを活用して認証、Database連携、Hostingまで全体の開発とデプロイを担当しました。\n実際のユーザーに向けてサービスを運営し、定期的なオンラインプロモーション活動も行いました。",
      "tech": ["HTML5", "CSS3", "JavaScript", "Firebase"],
      "links": {
        "project": "",
        "github": "https://github.com/mesel7/sweetii-docs"
      },
      "note": "本プロジェクトは現在、デプロイ環境が終了しておりサービスをご利用いただけません。また、会社の内部方針によりソースコードは公開できませんが、GitHubに別途まとめた紹介ページにて、主要機能・構造・スクリーンショットなどをご確認いただけます。\n本ページでは、開発の背景、課題解決の過程、学んだ点を中心にまとめています。",
      "insight": {
        "motive": "HTML5、CSS3、Vanilla JSを学習し、それらを活用して実際にユーザーが利用できるWebサービスを制作したいと考え、本プロジェクトを開始しました。\nマッチングプラットフォームという特性上、CRUD機能の実装は必須であり、信頼性とセキュリティを備えたFirebaseを活用し、認証、DB連携、Hostingまで全工程を自ら構築しました。\nまた、Vanilla JS環境において複雑な状態管理とUI更新を効率的に実装する方法を試験的に挑戦したプロジェクトでもあります。",
        "problemSolving": "快適なログイン環境を提供するため、Firebase Authenticationを基盤としたGoogle・Kakaoソーシャルログイン（OAuth 2.0）機能を実装しました。実装過程ではトークン処理やリダイレクトフローにおいて問題が発生しましたが、デバッグと認証プロセスの分析を通じて安定したログインプロセスを完成させました。\nまた、リアルタイムデータ反映のためにFirebaseの非同期ロジックを最適化し、イベント駆動のUI更新を適用しつつDOM操作を最小化することでパフォーマンスを向上させました。\n2024年4月のデプロイ後は実際のユーザー向けに運用を行い、画像読み込みの遅延、認証セッションの期限切れ、データ同期遅延などの問題が発生した際には即座に分析し、ホットフィックスを適用して改善しました。\nさらに、カスタマーサポートおよび管理者ページを構築し、ユーザーからの問い合わせに迅速に対応するとともに、利用者統計を可視化することでサービス運営の効率化を図りました。",
        "learned": "Vanilla JSのみでもリアルタイムデータを基盤としたWebサービスを実装できる可能性を確認できましたが、生産性や保守性の面で限界も感じました。\nFirebase Authentication、Database、Hostingまでの全工程を直接経験することで、Webサービスの企画・開発・デプロイの流れを全体的に理解することができました。特に、マッチングサービス特有の信頼性・セキュリティ・応答速度を考慮した設計や、実際のユーザーフィードバックを反映したUI/UX改善を繰り返す中で、フィードバックに基づく迅速な改善サイクルの重要性を学びました。\nまた、企画チームとの定期的なミーティングによる協働、実際の収益モデル設計、ユーザーの不便解消など、サービス運営の視点を持ったフロントエンド開発を経験しました。これにより、単なる画面実装にとどまらず、ユーザーがサービスをどのように認識し、体験するかまで設計する能力がフロントエンド開発者にとって不可欠であることを強く認識しました。これは私がフロントエンド開発の本質と考える価値観となり、その後のプロジェクト全体に一貫して適用しています。"
      }
    }
  },

  "projectDetail": {
    "page": {
      "title": "PROJECT DETAIL",
      "cta": {
        "backToList": "プロジェクト一覧",
        "projectsButton": "PROJECTS"
      },
      "notFound": "プロジェクトが存在しません。",
      "loading": "プロジェクト情報を読み込み中です..."
    }
  }
}
